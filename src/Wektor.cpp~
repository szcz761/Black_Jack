#include "Wektor.hh"



void Wektor::wyswietlinf()
  {
    for(int i=0;i<ROZMIAR;i++)
      { 
	cout << "wspolrzedne to : " << wsp[i] <<endl;
      }
  }

void Wektor::operator = (Wektor Wek2)
  {
    for (int i=0; i<ROZMIAR;i++)
      {
	wsp[i]=Wek2.wsp[i];
      }
  }

// OPERATORY--------------------------------

ostream& operator << (ostream &Strm, Wektor &Wek)
{ 
  int i=0;
  for(; i<ROZMIAR-1; i++)
      cout << Wek.getwsp(i) << ",";
  if(i<ROZMIAR)
    cout << Wek.getwsp(i);
  return Strm;
}

istream& operator >> (istream &Strm, Wektor &Wek)
{
  float tmp;
  for(int i = 0; i>=0 && i<ROZMIAR; i++)
    {
      cin >> tmp;
      Wek.setwsp(i,tmp);
    }
  return Strm;
}

Wektor operator + (Wektor &Wek1, Wektor &Wek2)
{
  Wektor wynik;
  for(int i = 0; i<ROZMIAR; i++)
      wynik.setwsp(i,Wek1.getwsp(i)+Wek2.getwsp(i));
  return wynik;
}

Wektor operator - (Wektor &Wek1, Wektor &Wek2)
{ 
  Wektor wynik;
  for(int i = 0; i<ROZMIAR; i++)
      wynik.setwsp(i,Wek1.getwsp(i)-Wek2.getwsp(i));
   return wynik;
}

Wektor operator * (Wektor &Wek1, float x)
{
  Wektor wynik;
  for(int i = 0; i<ROZMIAR; i++)
      wynik.setwsp(i,Wek1.getwsp(i)*x);
  return wynik;
}

Wektor operator * (float x,Wektor &Wek1)
{ 
 Wektor wynik;
  for(int i = 0; i<ROZMIAR; i++)
      wynik.setwsp(i,Wek1.getwsp(i)*x);
  return wynik;
}

float operator * (Wektor &Wek1, Wektor &Wek2)
{
  float wynik=0; 
  for(int i = 0; i<ROZMIAR; i++)
      wynik=wynik+Wek1.getwsp(i)*Wek2.getwsp(i);
  return wynik;
}

Wektor operator / (Wektor &Wek1, float x)
{
  Wektor wynik;
  for(int i = 0; i<ROZMIAR; i++)
      wynik.setwsp(i,Wek1.getwsp(i)/x);
  return wynik;
}

